<?php
// lib/functions.php
define('BASE_URL', '/vittrosviaggi/');

function caricaTinyMCE() {
    echo <<<EOT
<script src="../libs/tinymce/tinymce.min.js"></script>
<script>
tinymce.init({
    selector: '#contenuto',
    plugins: 'lists link image media code table textcolor',
    toolbar: 'undo redo | styleselect | fontfamily fontsize | bold italic underline | forecolor backcolor | alignleft aligncenter alignright | bullist numlist | link image media | code',
    images_upload_url: 'upload_tinymce.php',
    automatic_uploads: true,
    images_reuse_filename: true,
    font_family_formats: 'Arial=arial,helvetica,sans-serif; Courier New=courier new,courier; Georgia=georgia,palatino; Tahoma=tahoma,arial,helvetica; Verdana=verdana,geneva',
    font_size_formats: '8pt 10pt 12pt 14pt 16pt 18pt 24pt 36pt 48pt',
    style_formats: [
      { title: 'Sfondo azzurro', block: 'p', classes: 'bg-azzurro' },
      { title: 'Sfondo giallo', block: 'p', classes: 'bg-giallo' },
      { title: 'Sfondo Parlasco', block: 'div', classes: 'bg-sfondo-parlasco' },
      { title: 'Sfondo immagine KDE', block: 'div', classes: 'sfondo-kde' }
    ],
    content_css: '/css/form_post.css',
    height: 400,
    language: 'it'
});
</script>
EOT;
}

function crea_o_recupera_bozza($autore_id) {
    $pdo = getPDO();

    // Cerca bozza non salvata dell'utente
    $stmt = $pdo->prepare("SELECT * FROM post WHERE autore_id = ? AND bozza = 1 ORDER BY data_creazione DESC LIMIT 1");
    $stmt->execute([$autore_id]);
    $bozza = $stmt->fetch();

    if ($bozza) return $bozza;

    // Se non c'√®, crea una nuova bozza
    $stmt = $pdo->prepare("INSERT INTO post (titolo, contenuto, autore_id, bozza, data_creazione) VALUES ('', '', ?, 1, NOW())");
    $stmt->execute([$autore_id]);

    $id = $pdo->lastInsertId();
    return [
        'id' => $id,
        'titolo' => '',
        'contenuto' => '',
        'cartella' => '',
        'bozza' => 1,
        'autore_id' => $autore_id
    ];
}

function suggerisci_cartelle($titolo, $base_path) {
    preg_match_all('/\b\w+\b/u', strtolower($titolo), $matches);
    $parole = array_filter($matches[0], fn($w) => strlen($w) > 3); // esclude "di", "e", "con", etc.

    $cartelle = [];
    $anni = scandir($base_path);
    foreach ($anni as $anno) {
        if (!is_dir("$base_path/$anno") || !preg_match('/^\d{4}$/', $anno)) continue;

        $subdirs = scandir("$base_path/$anno");
        foreach ($subdirs as $sub) {
            $full = "$base_path/$anno/$sub";
            if (!is_dir($full)) continue;
            $nome = strtolower($sub);
            foreach ($parole as $p) {
                if (strpos($nome, $p) !== false) {
                    $cartelle["$anno/$sub"] = $sub;
                    break;
                }
            }
        }
    }
    return $cartelle;
}

// Connessione PDO (modifica user/password secondo configurazione)
function getPDO() {
    static $pdo = null;
    if ($pdo === null) {
        $host = 'localhost';
        $db = 'vittrosviaggi';
        $user = 'root';
        $pass = 'vivaZapata1959!';
        $dsn = "mysql:host=$host;dbname=$db;charset=utf8mb4";
        try {
            $pdo = new PDO($dsn, $user, $pass, [
                PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION,
                PDO::ATTR_DEFAULT_FETCH_MODE => PDO::FETCH_ASSOC
            ]);
        } catch (PDOException $e) {
            die("Errore connessione DB: " . $e->getMessage());
        }
    }
    return $pdo;
}

// Funzione per mostrare il form del post (creazione o modifica)
function mostra_form_post($post = null, $cartelle = [], $rel_path = '') {
    // $post √® array con dati post o null se nuovo
    $titolo = $post['titolo'] ?? '';
    $contenuto = $post['contenuto'] ?? '';
    $cartella_selezionata = $post['cartella'] ?? $rel_path;
    $musica = $post['musica'] ?? '';
    $id = $post['id'] ?? '';

    // Calcolo livello superiore per navigazione cartelle
    $livello_superiore = dirname($cartella_selezionata);
    if ($livello_superiore === '.' || $cartella_selezionata === '') {
        $livello_superiore = '';
    }
    ?>

    <form action="<?= $id ? 'modifica_post.php' : 'salva_post.php' ?>" method="post">
        <?php if ($id): ?>
            <input type="hidden" name="id" value="<?= htmlspecialchars($id) ?>">
        <?php endif; ?>

        <div class="form-group">
          <label for="titolo">Titolo del post:</label>
          <input type="text" name="titolo" id="titolo" required value="<?= htmlspecialchars($titolo) ?>">
        </div>

        <div class="form-group">
          <label for="contenuto">Contenuto:</label>
          <textarea name="contenuto" id="contenuto"><?= htmlspecialchars($contenuto) ?></textarea>
        </div>

        <div class="form-group">
          <label for="foto">Scegli una cartella di foto da includere:</label>

          <?php if ($cartella_selezionata): ?>
            <p><a href="?path=<?= urlencode($livello_superiore) ?>">üîô Torna a: <?= htmlspecialchars($livello_superiore ?: '/') ?></a></p>
            <p><strong>üìÇ Cartella attuale:</strong> <?= htmlspecialchars($cartella_selezionata) ?></p>
          <?php endif; ?>

          <div class="scroll-box">
            <?php if (empty($cartelle)): ?>
              <p><em>(Nessuna sottocartella)</em></p>
            <?php else: ?>
              <?php foreach ($cartelle as $cartella): ?>
                <!-- <a class="cartella-link" href="?id=<?= $id ?>&path=<?= urlencode($nuovo_path) ?>"> -->

                <a class="cartella-link" href="?id=<?= $id ?>&path=<?= urlencode(trim(($cartella_selezionata ? $cartella_selezionata . '/' : '') . $cartella, '/')) ?>">

                  üìÅ <?= htmlspecialchars($cartella) ?>
                </a>
              <?php endforeach; ?>
            <?php endif; ?>
          </div>

          <?php if (!empty($cartella_selezionata)): ?>
            <div class="azioni">
              <input type="hidden" name="cartella_foto" id="cartella_foto" value="<?= htmlspecialchars($cartella_selezionata) ?>">
              <button type="submit" name="usa_cartella" class="btn btn-primary">‚úîÔ∏è Usa questa cartella</button>
              <a class="btn btn-secondary" target="_blank" href="galleria.php?path=<?= urlencode($cartella_selezionata) ?>">üñº Apri galleria</a>
            </div>
          <?php endif; ?>
        </div>

        <div class="form-group">
          <label for="musica">Link a file musicale (opzionale):</label>
          <input type="text" name="musica" placeholder="URL o percorso file" value="<?= htmlspecialchars($musica) ?>">
        </div>

        <button type="button" onclick="apriGalleria()">üì∑ Inserisci foto dal nostro archivio</button>

        <br><br>
        <button type="submit">üíæ Salva post</button>
    </form>

    <script src="/libs/tinymce/tinymce.min.js"></script>
    <script>
      tinymce.init({
        selector: '#contenuto',
        plugins: 'lists link image media code table textcolor',
        toolbar: 'undo redo | styleselect | fontfamily fontsize | bold italic underline | forecolor backcolor | alignleft aligncenter alignright | bullist numlist | link image media | code',
        images_upload_url: 'upload_tinymce.php',
        automatic_uploads: true,
        images_reuse_filename: true,
        font_family_formats: 'Arial=arial,helvetica,sans-serif; Courier New=courier new,courier; Georgia=georgia,palatino; Tahoma=tahoma,arial,helvetica; Verdana=verdana,geneva',
        font_size_formats: '8pt 10pt 12pt 14pt 16pt 18pt 24pt 36pt 48pt',
        style_formats: [
          { title: 'Sfondo azzurro', block: 'p', classes: 'bg-azzurro' },
          { title: 'Sfondo giallo', block: 'p', classes: 'bg-giallo' },
          { title: 'Sfondo Parlasco', block: 'div', classes: 'bg-sfondo-parlasco' },
          { title: 'Sfondo immagine KDE', block: 'div', classes: 'sfondo-kde' }
        ],
        content_css: '/css/content.css',
        height: 400,
        language: 'it'
      });

      function apriGalleria() {
        const cartella = document.getElementById("cartella_foto").value;
        if (!cartella) {
          alert("Seleziona prima una cartella!");
          return;
        }
        const url = "galleria.php?cartella=" + encodeURIComponent(cartella);
        window.open(url, 'Galleria', 'width=1000,height=700');
      }
      
function aggiornaCartelleSuggerite(id) {
  fetch('scripts/ricarica_cartelle.php', {
    method: 'POST',
    headers: {'Content-Type': 'application/x-www-form-urlencoded'},
    body: 'id=' + encodeURIComponent(id)
  })
  .then(r => r.json())
  .then(cartelle => {
    const box = document.querySelector('.scroll-box');
    if (box) {
      box.innerHTML = '';
      if (cartelle.length === 0) {
        box.innerHTML = '<p><em>(Nessuna cartella suggerita)</em></p>';
      } else {
        cartelle.forEach(c => {
          const link = document.createElement('a');
          link.className = 'cartella-link';
          link.href = '?id=' + id + '&path=' + encodeURIComponent(c);
          link.textContent = 'üìÅ ' + c.split('/').pop();
          box.appendChild(link);
        });
      }
    }
  });
}

// Chiamalo all‚Äôavvio solo se siamo in modalit√† bozza
const idField = document.querySelector('input[name="id"]');
if (idField) aggiornaCartelleSuggerite(idField.value);

      
      document.getElementById("titolo").addEventListener("blur", function () {
      const titolo = this.value;
      const id = document.querySelector('input[name="id"]').value;

      if (!titolo || !id) return;

      fetch('scripts/autosave_titolo.php', {
         method: 'POST',
         headers: {'Content-Type': 'application/x-www-form-urlencoded'},
         body: 'id=' + encodeURIComponent(id) + '&titolo=' + encodeURIComponent(titolo)
      });

    </script>

    <?php
}
?>
